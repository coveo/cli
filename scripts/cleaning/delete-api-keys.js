require('isomorphic-fetch');
require('abortcontroller-polyfill');

const {homedir} = require('os');
const {join} = require('path');
const {config} = require('dotenv');
const {getClient, yargGenerator, wasCreatedBefore} = require('./utils');
config({path: join(homedir(), '.env')});

function wasCreatedByTheCli(testRunId = '') {
  return (key) =>
    (key.displayName?.startsWith(`cli-idwindows-latest-${testRunId}`) ||
      key.displayName?.startsWith(`cli-idubuntu-20-04-${testRunId}`) ||
      key.displayName?.startsWith(`cli-id${testRunId}`)) &&
    key.description === 'Generated by the Coveo CLI';
}

async function deleteApiKeys(platform, apiKeysToDelete) {
  for (let i = 0; i < apiKeysToDelete.length; i++) {
    const apiKey = apiKeysToDelete[i];
    console.log(`Deleting ${apiKey.displayName}`);
    await platform.apiKey.delete(apiKey.id);
  }
  console.log(`\nDeleted ${apiKeysToDelete.length} API keys`);
}

async function main(amount, unit) {
  const {
    ORG_ID: testOrgId,
    TEST_RUN_ID: testRunId,
    PLATFORM_API_KEY: accessToken,
    PLATFORM_ENV: env,
  } = process.env;
  const platform = getClient(accessToken, env, testOrgId);
  try {
    const apiKeys = await platform.apiKey.list();

    const cliApiKeys = apiKeys
      .filter(wasCreatedByTheCli(testRunId))
      .filter(wasCreatedBefore(amount, unit));

    await deleteApiKeys(platform, cliApiKeys);
  } catch (error) {
    console.log(error);
    process.exit(1);
  }
}

const argv = yargGenerator('API Keys');

const {amount, unit} = argv.olderThan;
main(amount, unit);
