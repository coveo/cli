const axios = require('axios');
const {homedir} = require('os');
const {join} = require('path');
const {config} = require('dotenv');
config({path: join(homedir(), '.env')});

// TODO: CDX-98: URL should vary in function of the target environment.
const platformHost = 'https://platformdev.cloud.coveo.com/rest/';

function wasCreatedByTheCli(testRunId = '') {
  return (key) =>
    key.displayName?.startsWith(`cli-${testRunId}`) &&
    key.description === 'Generated by the Coveo CLI';
}

function isAtLeastOneDayOld(key) {
  const today = new Date();
  return (
    key.createdDate && key.createdDate < today.setDate(today.getDate() - 1)
  );
}

function authHeader(accessToken) {
  return {
    headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  };
}

async function getAllApiKeys(orgId, accessToken) {
  const apiKeysUrl = `${platformHost}organizations/${orgId}/apikeys`;
  const response = await axios.get(apiKeysUrl, authHeader(accessToken));
  return response.data;
}

async function deleteApiKeys(orgId, accessToken, apiKeysToDelete) {
  for (let i = 0; i < apiKeysToDelete.length; i++) {
    const apiKey = apiKeysToDelete[i];
    const apiKeyUrl = `${platformHost}organizations/${orgId}/apikeys/${apiKey.id}`;
    console.log(`Deleting ${apiKey.displayName}`);
    await axios.delete(apiKeyUrl, authHeader(accessToken));
  }
  console.log(`\nDeleted ${apiKeysToDelete.length} API keys`);
}

async function main() {
  const testOrgId = process.env.TEST_ORG_ID;
  const accessToken = process.env.ACCESS_TOKEN;
  const testRunId = process.env.TEST_RUN_ID;
  const apiKeys = await getAllApiKeys(testOrgId, accessToken);

  let cliApiKeys = apiKeys.filter(wasCreatedByTheCli(testRunId));
  if (!testRunId) {
    cliApiKeys = cliApiKeys.filter(isAtLeastOneDayOld);
  }
  console.log('*********************');
  console.log(testRunId);
  console.log(cliApiKeys);
  console.log('*********************');

  deleteApiKeys;
  // (testOrgId, accessToken, cliApiKeys);
}

main();
