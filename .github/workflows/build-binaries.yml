name: Build binaries

on:
  pull_request:

jobs:
  package:
    env:
      GITHUB_CREDENTIALS: ${{ secrets.GITHUB_TOKEN }}
    name: Package for ${{ matrix.for }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            pack-command: ':macos'
            for: 'macos install kit'
            package-targets: 'darwin-x64'
          - os: windows-latest
            pack-command: ':win'
            for: 'windows install kit'
            package-targets: 'win32-x64,win32-x86'
          - os: ubuntu-latest
            pack-command: ':deb'
            for: 'linux install kit'
            package-targets: 'linux-x64,linux-arm'

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3
        with:
          node-version: '16'
      - name: Setup
        run: npm i
      - name: Get tag
        run: node ./scripts/get-tag.js # ToDo (PRE_NX): replace by some jq magic
      - name: Build
        working-directory: ./packages/cli
        run: npm run build
      - name: Create install kits
        working-directory: ./packages/cli
        run: ../../node_modules/@oclif/dev-cli/bin/run pack${{ matrix.pack-command }}
      - name: Create packages
        working-directory: ./packages/cli
        run: |
          ../../node_modules/@oclif/dev-cli/bin/run pack -t="${{ matrix.package-targets }}"
          mv ./dist/version ./dist/${{ matrix.os }}-version
          mv ./dist/coveo-${{ env.tag }}/coveo-${{ env.tag }}.tar.gz ./dist/coveo-${{ env.tag }}/${{ matrix.os }}-coveo-${{ env.tag }}.tar.gz
      - uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # renovate: tag=v2
        if: ${{ always() }}
        with:
          name: ${{matrix.os}}-test-artifacts
          path: ./packages/cli/dist
