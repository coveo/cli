name: Build binaries

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'The version where to upload the binaries'
        required: true

jobs:
  package:
    environment: 'Release'
    env:
      GITHUB_CREDENTIALS: ${{ secrets.GITHUB_TOKEN }}
    name: Package for ${{ matrix.for }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            pack-command: ' macos'
            for: 'macos install kit'
          - os: windows-latest
            pack-command: ' win'
            for: 'windows install kit'
          - os: ubuntu-latest
            pack-command: ' deb'
            for: 'linux install kit'

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3
        with:
          # pulls all commits (needed for finding the @coveo/cli version to release)
          fetch-depth: 0
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3
      - name: Setup
        run: npm i
      - name: Get tags
        run: node ./scripts/get-tags.mjs
      - name: Build
        run: npm run build
      - name: Create install kits
        working-directory: ./packages/cli/core
        run: ../../../node_modules/oclif/bin/run pack${{ matrix.pack-command }}
      - name: Create packages
        working-directory: ./packages/cli/core
        if: ${{matrix.os == 'ubuntu-latest'}}
        run: ../../../node_modules/oclif/bin/run pack tarballs
      - name: Get commit hash of binaries
        run: node ../../../scripts/get-commit-short-hash.mjs
        working-directory: ./packages/cli/core
      - name: Sign Executable
        working-directory: ./packages/cli/core
        if: ${{matrix.os == 'windows-latest'}}
        run: |
          New-Item -Force -ItemType directory -Path tmp
          echo "${{ secrets.COVEO_PFX }}" > ./tmp/cert.txt
          certutil -decode ./tmp/cert.txt ./tmp/cert.pfx
          Start-Process -FilePath "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe" -ArgumentList "sign /f ./tmp/cert.pfx /p ${{ secrets.COVEO_PFX_PWD }} /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 ./dist/win32/coveo-${{env.cliversion}}-${{env.commitSHA1}}-x64.exe" -PassThru | Wait-Process
          Start-Process -FilePath "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe" -ArgumentList "sign /f ./tmp/cert.pfx /p ${{ secrets.COVEO_PFX_PWD }} /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 ./dist/win32/coveo-${{env.cliversion}}-${{env.commitSHA1}}-x86.exe" -PassThru | Wait-Process
      - name: Upload binaries
        uses: svenstaro/upload-release-action@133984371c30d34e38222a64855679a414cb7575 # tag=2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./packages/cli/core/dist/**/*
          file_glob: true
          tag: ${{ env.tag }}
