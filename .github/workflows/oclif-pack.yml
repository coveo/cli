name: github release

on: push

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.short_hash.outputs.sha_short }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Compute short hash
        id: short_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: create-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.short_hash.outputs.sha_short }}
          release_name: Release ${{ steps.short_hash.outputs.sha_short }}
          draft: false
          prerelease: false
  
  package:
    name: Package for ${{ matrix.pack-command }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            pack-command: macos
            additional-install: echo "no additional install"
          - os: ubuntu-latest
            pack-command: win
            additional-install: sudo apt-get install nsis p7zip-full -y

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Setup
        run: npm run setup
      - name: Additional install
        run: ${{ matrix.additional-install }}
      - name: Create package
        working-directory: ./packages/cli
        run: npx @oclif/dev-cli pack:${{ matrix.pack-command }}
      - name: Upload binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GHITHUB_TOKEN }}
          file: ./packages/cli/dist/${{ matrix.pack-command }}/**/*
          file_glob: true
          tag: ${{ needs.create-release.outputs.tag }}