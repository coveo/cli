name: Build
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  run-script:
    runs-on: ${{matrix.os}}
    environment: 'Release'
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        node: [14]
    env:
      PLATFORM_USER_NAME: ${{ secrets.PLATFORM_USER_NAME }}
      PLATFORM_USER_PASSWORD: ${{ secrets.PLATFORM_USER_PASSWORD }}
      COVEO_DISABLE_AUTOUPDATE: true
      UI_TEMPLATE_VERSION: '0.0.0'
    steps:
      - name: Setup runner
        if: ${{matrix.os == 'ubuntu-latest'}}
        # Ensure we can use as many file watcher as we want. see https://github.com/facebook/create-react-app/blob/master/docusaurus/docs/troubleshooting.md#npm-start-fail-due-to-watch-error
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Setup runner
        if: ${{matrix.os == 'windows-latest'}}
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Testing for Win
        if: ${{matrix.os == 'windows-latest'}}
        run: |
          New-Item -ItemType directory -Path C:\coveo
          New-Item -ItemType directory -Path C:\tmp
          Invoke-WebRequest https://github.com/coveo/cli/releases/download/v1.3.0/coveo-v1.3.0-x64.exe -OutFile c:\coveo\coveo.exe
          echo "${{ secrets.COVEO_PFX }}" > C:\tmp\cert.txt
          certutil -decode C:\tmp\cert.txt C:\tmp\cert.pfx
          Start-Process -FilePath "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe" -ArgumentList "sign /f C:\tmp\cert.pfx /p ${{ secrets.COVEO_PFX_PWD }} /fd SHA256 /td SHA256 /tr http://timestamp.digicert.com c:\coveo\coveo.exe" -PassThru | Wait-Process
      - uses: actions/upload-artifact@v2
        if: ${{matrix.os == 'windows-latest'}}
        with:
          name: test-cert-win
          path: c:\coveo\
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node}}
      - name: Setup repo
        run: npm run setup
      - name: Check linting
        run: npm run lint
      - name: Tests
        run: npm run test
      - name: Build CLI
        working-directory: ./packages/cli
        run: tsc -b
      - name: End-to-end Tests
        if: ${{matrix.os == 'ubuntu-latest'}}
        run: bash packages/cli-e2e/entrypoints/ci.sh
      - name: End-to-end Tests
        if: ${{matrix.os == 'windows-latest'}}
        run: packages/cli-e2e/entrypoints/ci.ps1
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{matrix.os}}-test-artifacts
          path: ./packages/cli-e2e/artifacts
