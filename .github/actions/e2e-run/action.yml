name: E2E Run
description: 'Run a E2E spec'
inputs:
  spec:
    description: 'The spec to run'
    required: true
  os:
    description: 'The OS on which the action run'
    required: true
  node:
    description: 'The Node version on which the action run'
    required: true
  cliConfigJson:
    description: 'The CLI config generated by the login'
    required: true
  npmRegistry:
    description: 'The NPM Registry to use'
    required: false
    default: 'https://registry.npmjs.org/'

runs:
  using: composite
  steps:
    - name: Setup runner
      shell: bash
      if: ${{inputs.os == 'ubuntu-latest'}}
      # Ensure we can use as many file watcher as we want. see https://github.com/facebook/create-react-app/blob/master/docusaurus/docs/troubleshooting.md#npm-start-fail-due-to-watch-error
      run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
    - name: Setup runner
      shell: bash
      if: ${{inputs.os == 'windows-latest'}}
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
      with:
        node-version: ${{inputs.node}}
        cache: 'npm'
    - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # tag=v4
      with:
        cache: 'pip'
        python-version: '3.10'
    - name: Install Mitmproxy through pip
      shell: bash
      run: pip install -r packages/cli-e2e/mitmproxy/requirements.txt
    - name: Decrypt config
      shell: bash
      working-directory: packages/cli-e2e
      run: echo ${{inputs.cliConfigJson}} | base64 --decode | gpg --quiet --batch --yes --decrypt --passphrase="${{ env.E2E_TOKEN_PASSPHRASE }}" --output decrypted
    - run: npm ci
      shell: bash
    - name: End-to-end Setup
      shell: bash
      if: ${{inputs.os == 'ubuntu-latest'}}
      run: bash packages/cli-e2e/entrypoints/ci.sh
    - name: End-to-end Setup
      shell: powershell
      if: ${{inputs.os == 'windows-latest'}}
      run: packages/cli-e2e/entrypoints/ci.ps1
    - name: Tests
      shell: bash
      if: ${{inputs.os == 'windows-latest'}}
      working-directory: packages/cli-e2e
      run: npm run jest:ci -- ${{inputs.spec}}
      env:
        npm_config_registry: ${{inputs.npmRegistry}}
    - name: Tests
      shell: bash
      if: ${{inputs.os == 'ubuntu-latest'}}
      env:
        DISPLAY: ':1'
        npm_config_registry: ${{inputs.npmRegistry}}
      working-directory: packages/cli-e2e
      run: npm run jest:ci -- ${{inputs.spec}}
    - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
      if: always()
      with:
        name: ${{inputs.os}}-${{inputs.spec}}-test-artifacts
        path: ./packages/cli-e2e/artifacts
